# Generated by Django 5.1.5 on 2025-04-26 13:16

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('contact_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('emergency_contact', models.CharField(max_length=20)),
                ('registration_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'ordering': ['-registration_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='HealthProgram',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('planned', 'Planned')], default='planned', max_length=20)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'health program',
                'verbose_name_plural': 'health programs',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['name'], name='api_healthp_name_0e92a6_idx'), models.Index(fields=['status'], name='api_healthp_status_54bb55_idx'), models.Index(fields=['start_date'], name='api_healthp_start_d_99f1c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.client')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.healthprogram')),
            ],
            options={
                'verbose_name': 'enrollment',
                'verbose_name_plural': 'enrollments',
                'ordering': ['-enrollment_date'],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='programs',
            field=models.ManyToManyField(related_name='clients', through='api.Enrollment', to='api.healthprogram'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['enrollment_date'], name='api_enrollm_enrollm_5cc132_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['status'], name='api_enrollm_status_8d0e94_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('client', 'program')},
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['first_name', 'last_name'], name='api_client_first_n_e952e7_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['email'], name='api_client_email_14fe36_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['registration_date'], name='api_client_registr_bb49c0_idx'),
        ),
    ]
